# My macro list

######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT. See docs/Slicers.md for more information on using these macros.

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    # Use absolute coordinates
    G90
    # Extruder absolute mode
    M82
    
    PURGE_LINE BED_TEMP={BED_TEMP} EXTRUDER_TEMP={EXTRUDER_TEMP} PRINT_START={true}  


# Purge Line
[gcode_macro PURGE_LINE]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    {% set PRINT_START = params.PRINT_START|default(false) %}
    
    # Start bed heating
    M140 S{BED_TEMP}
    # Set nozzle temperature
    M104 S{EXTRUDER_TEMP}
    
    # Home the printer
    G28
    # Load Bed Mesh
    BED_MESH_PROFILE LOAD=default
    
    # Move head up and over  
    # Move the nozzle to prime position
    G1 X0.1 Y-5 Z40 F3000
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    
    # Move down to start priming
    G1 X20 Y0 Z0.3 F500
    # Reset Extruder
    G92 E0
    # Draw first line
    G1 X180 Y0 Z0.3 E13.5 F1500
    # Move over 
    G1 X180 Y0.4 Z0.3 F5000
    # Reset Extruder
    G92 E0
    # Draw second line
    G1 X20 Y0.4 Z0.3 E13.5 F1500
    # Reset Extruder
    G92 E0
	# Wipe out
	G1 X15 Y5 Z0.3 F5000

    # if not the start of a print turn everything off
    {% if PRINT_START is false %}
        # Turn off bed, extruder, and fan
        M140 S0
        M104 S0
        M106 S0

        # Raise nozzle by 10mm
        # G1 Z10 F5000

        # Reset Extruder
        G92 E0
        # Disable steppers
        M84
	  {% endif %}



[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    # Relative positioning
    G91
    # Wipe, raise and retract
    G1 F5000 X2 Y2 Z2 E-3 
    # Absolute Positioning
    G90
    G1 X1 Y180 F3000
    # Reset Extruder
    G92 E0
    # Disable steppers
    M84

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  END_PRINT
  CANCEL_PRINT_BASE
    

####################################
## Bed Mesh Calibration
####################################
# Bed Mesh Calibrate G29
[gcode_macro START_BED_MESH_CALIBRATE]
gcode:
    G28
	  BED_MESH_CALIBRATE PROFILE="default"

######### Z-OFFSET CALIBRATION ##########
[gcode_macro CALIBRATE_Z_OFFSET]
description: Calibrate Z offset
gcode:
    G28
    PROBE_CALIBRATE

######### PID CALIBRATION ##########
# Calibrate Extruder PID
[gcode_macro PID_CAL_EXTRUDER]
gcode:
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    PID_CALIBRATE HEATER=extruder TARGET={EXTRUDER_TEMP}

# Calibrate Heated Bed PID
[gcode_macro PID_CAL_BED]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    PID_CALIBRATE HEATER=heater_bed TARGET={BED_TEMP}

######### INPUT SHAPING ##########
# Set square corner velocity
[gcode_macro SET_SQUARE_CORNER_VELOCITY]
gcode:
    {% set SQCNR_VELOC = params.Velocity|default(5)|float %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={SQCNR_VELOC}
# Clear Input shaping values
[gcode_macro CLEAR_INPUT_SHAPING]
gcode:
	SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0

# Prepare
[gcode_macro PREPARE_INPUT_SHAPING_TOWER]
gcode:
    # Increase max_accel_to_decel
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL=7000
    # Disable Pressure Advance
    SET_PRESSURE_ADVANCE ADVANCE=0
    #  Clear input shaping values
    CLEAR_INPUT_SHAPING
    # Set up tuning tower
    TUNING_TOWER COMMAND=SET_VELOCITY_LIMIT PARAMETER=ACCEL START=1500 STEP_DELTA=500 STEP_HEIGHT=5


# Query accelerometer
[gcode_macro QUERY_ACCLELEROMETER]
gcode:
    ACCELEROMETER_QUERY

[gcode_macro SHAPER_CALIBRATE_X]
gcode:
    SHAPER_CALIBRATE AXIS=X

[gcode_macro SHAPER_CALIBRATE_Y]
gcode:
    SHAPER_CALIBRATE AXIS=Y

# Measure X axis resonance
[gcode_macro MEASURE_X_RESONANCE]
gcode:
    TEST_RESONANCES AXIS=X

# Measure Y axis resonance
[gcode_macro MEASURE_Y_RESONANCE]
gcode:
    TEST_RESONANCES AXIS=Y


######### PRESSURE ADVANCE ##########
# Prepare Pressure advance test
[gcode_macro PREPARE_PRESSURE_ADVANCE] 
gcode:
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
    TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.005

    
######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro FILAMENT_CHANGE]
gcode:
    M600

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state
    
    
    
######################################################################
# Override M117 command with rawparams
######################################################################

# The macro below will override the default M117 command to echo the message.
#
# It uses the rawparams pseudo-variable that contains the full unparsed
# parameters that was passed to the M117 command.
#
# As this can include comments, we are trimming the text when a `;` or `#` is
# found, and escaping any existing `"`

#[gcode_macro M117]
# rename_existing: M117.1
#gcode:
#  {% if rawparams %}
#    {% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
#    SET_DISPLAY_TEXT MSG="{escaped_msg}"
#    RESPOND TYPE=command MSG="{escaped_msg}"
#  {% else %}
#    SET_DISPLAY_TEXT
#  {% endif %}
  
  
  
 # Cancel object (aka Marlin/RRF M486 commands) support
#
# Enable object exclusion
[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}